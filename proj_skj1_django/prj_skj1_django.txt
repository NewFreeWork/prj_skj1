*새로운환경에서 작업할때 순서
1.파이썬을 설치한다.
2.가상환경 virtualenv를 설치한다.
3.가상환경 virtualenv로 만든다음에 한개의 가상환경 프로젝트를 만든다.
4.requirement.txt(서버에서 설치했던 패키지 리스트)를 이용해서 자신의 컴퓨터에 환경 설정을 한다.
:pip install -r requirements.txt 


*prj_skj1 
django 슈퍼유저 설정
python mange.py createsuperuser 

admin username : admin
admin password : password123


*pip 관련
설치된거 삭제 명령
pip uninstall [option] package


*django rest framework 작업
https://www.django-rest-framework.org/tutorial/quickstart/



*가상환경(virtualenv) 사용방법
시작
source activate
종료
deactivate

*gunicorn 사용방법(사용전 가상환경이 맞는지 먼저 확인)
gunicorn proj_skj1_django.wsgi:application --bind 127.0.0.1:3030 --daemon --reload

*nginx 사용방법
service nginx start
service nginx restart(재시작)

cat /etc/nginx/sites-available/proj_skj1_nginx ->proj skj1 서버의 설정내용 확인
cat /etc/nginx/sites-enable/proj_skj1_nginx ->proj skj1 서버의 설정의 적용내용 확인

nginx/gunicorn사용시에 정적파일을 nginx에 매핑시켜야 이미지가 나온다. 
location /static/ {
 alias /home/ubuntu/name(projectname)/staticfile/;
}



*스마트 깃 백그라운드로 실행하는 방법
nohup smartgit &


*ddns
일단 아이피타임으로 사용
host이름 : codeplane


*가상환경에서 설치된 패키지 확인 및 requirement.txt 파일로 저장하는 법
pip list (설치된 패키지 확인)
pip freeze > requirements.txt (설치된 패키지 리스트로 저장)




*색상표시관련 참고사이트
https://encycolorpedia.kr/343a40

*서버 ssh 접속방법
ssh khlee@codeplane.iptime.org

*git command
git status 현재 깃 상태 확인
git remote -v 로컬 repository와 원격 repository연동 현황을 조회
git fetch
git pull origin
git push –u origin master



*아이콘 변환 사이트
https://convertico.com

*색상조합 사이트
https://www.paletton.com/#uid=1000u0kllllaFw0g0qFqFg0w0aF

*postgresql proj_skj1_django 데이터베이스 생성
user:skj1
password:skj1database
postgres user로 접근
sudo -i -u postgres
postgre sql진입
psql 
create database proj_skj1_django;
create user skj1 with password 'skj1database';
alter role skj1 set client_encoding to 'utf-8';
alter role skj1 set timezone to 'asia/seoul';



